import numpy as np
from tensorflow.keras.models import Sequential
from tensorflow.keras.layers import Dense


# Define the XOR dataset
X = np.array([[0, 0], [0, 1], [1, 0], [1, 1]])
y = np.array([[0], [1], [1], [0]])


# Create the model
model = Sequential()
model.add(Dense(2, input_dim=2, activation='sigmoid'))
model.add(Dense(1, activation='sigmoid'))


# Compile the model
model.compile(loss='binary_crossentropy', optimizer='adam', metrics=['accuracy'])

# Train the model
model.fit(X, y, epochs=1000, batch_size=1)

# Evaluate the model
scores = model.evaluate(X, y)
print("\n%s: %.2f%%" % (model.metrics_names[1], scores[1]*100))


# Predict the output for the XOR dataset
predictions = model.predict(X)

# Print the predictions
for i in range(len(predictions)):
    print("X=%s, Predicted=%s" % (X[i], predictions[i]))
model.summary()
model.get_config()
from tensorflow.keras.utils import plot_model
plot_model(model, to_file='model.png')
