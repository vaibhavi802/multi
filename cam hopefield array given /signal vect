import numpy as np
mem_vectors = np.array([[1,1,0,0,0,0],[0,0,0,0,1,1],[0,0,1,1,0,0]])

q = len(mem_vectors)
n = len(mem_vectors[0])

bip_mem_vecs = 2*(mem_vectors)-1
print(q,n,bip_mem_vecs)

zd_wt_mat = np.zeros((n,n))
for i in range(0,q):
    zd_wt_mat = zd_wt_mat+bip_mem_vecs[i].conj().transpose()*bip_mem_vecs[i]
    zd_wt_mat = zd_wt_mat - q*np.identity(n)
    
probe = np.array([0,0,0,1,0,1])
print('Enter the probe vector:',probe)
signal_vector = 2*probe-1
flag = np.array([0])


while len(flag)!=n:
    permindex = np.random.permutation(n)
    old_signal_vector = signal_vector
    
for j in range(1,n):
    act_vec = signal_vector*zd_wt_mat
    print(act_vec[permindex[j]])
    if(act_vec[permindex[j]]).all()>0:
        signal_vector[permindex[j]]=1
    elif act_vec[permindex[j]].all()<0:
        signal_vector(permindex[j])==-1
        print(type(signal_vector),type(old_signal_vector))
        flag = signal_vector * old_signal_vector
            
print("The Recalled vector is",signal_vector)
print(0.5*(signal_vector+1))
